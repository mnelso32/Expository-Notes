ring R = 0,M(1..2)(1..2)(1..2),dp;
matrix L[2][2] = 1,2,0,1;

ideal IP;
ideal IH;
int k; int i1; int i2; int i3; int i4; int j1; int j2; int j3; int j4; int j5; 

for(k = 1; k <= 2; k++){
for(i1 = 1; i1 <= 2; i1++){
for(i2 = 1; i2 <= 2; i2++){
for(i3 = 1; i3 <= 2; i3++){
for(i4 = 1; i4 <= 2; i4++){
     poly P(k)(i1)(i2)(i3)(i4);
     for(j1 = 1; j1 <= 2; j1++){
     for(j2 = 1; j2 <= 2; j2++){
     for(j3 = 1; j3 <= 2; j3++){
     for(j4 = 1; j4 <= 2; j4++){
     for(j5 = 1; j5 <= 2; j5++){ 
           P(k)(i1)(i2)(i3)(i4) = P(k)(i1)(i2)(i3)(i4) + ( M(j1)(i1)(i2) * L[j2,i3] * L[j3,i4] * L[j4,i1] * M(j5)(j2)(j3) * M(k)(j4)(j5) 
                                                       - L[j1,i1] * L[j2,i2] * M(j3)(i3)(i4) * M(j4)(j1)(j2) * L[j5,j3] * M(k)(j4)(j5) ) ;
     }}}}};
     IP = IP + P(k)(i1)(i2)(i3)(i4);
}}}}};


for(k = 1; k <= 2; k++){
for(i1 = 1; i1 <= 2; i1++){
for(i2 = 1; i2 <= 2; i2++){
for(i3 = 1; i3 <= 2; i3++){
     poly H(k)(i1)(i2)(i3);
     for(j1 = 1; j1 <= 2; j1++){
     for(j2 = 1; j2 <= 2; j2++){
           H(k)(i1)(i2)(i3) = H(k)(i1)(i2)(i3) + ( M(j1)(i1)(i2) * L[j2,i3] * M(k)(j1)(j2) - L[j1,i1] * M(j2)(i2)(i3) * M(k)(j1)(j2) ) ;
     }};
     IH = IH + H(k)(i1)(i2)(i3);
}}}};


ring S = 0,(a,b,c,d,x,y,z,w),dp;
ideal IP = fetch(R,IP);
ideal IH = fetch(R,IH);


LIB "primdec.lib"
option(prot);
int t=timer;
system("--ticks-per-sec", 100);


minAssGTZ(IP);


[1]:
   _[1]=w
   _[2]=z
   _[3]=y
   _[4]=x
   _[5]=c
   _[6]=a
[2]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=d
   _[5]=c
   _[6]=b
   _[7]=a
[3]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=d
   _[5]=c
   _[6]=b-w
   _[7]=a
[4]:
   _[1]=x+y-z-w
   _[2]=d+w
   _[3]=c+z
   _[4]=b+y
   _[5]=a-y+z+w
[5]:
   _[1]=-z2+xw
   _[2]=dz+w2
   _[3]=dx+zw
   _[4]=y-z
   _[5]=c+w
   _[6]=b+w
   _[7]=a+z
   
   
minAssGTZ(IH);   
   
   
[1]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=d-2w
   _[5]=c
   _[6]=b-w
   _[7]=a
[2]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=d-2w
   _[5]=c-w
   _[6]=b
   _[7]=a
[3]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=c
   _[5]=b
   _[6]=a
[4]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=c-w
   _[5]=b-w
   _[6]=a
[5]:
   _[1]=-z2+xw
   _[2]=dz+w2
   _[3]=dx+zw
   _[4]=y-z
   _[5]=c+w
   _[6]=b+w
   _[7]=a+z
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
   
[1]:
   _[1]=w
   _[2]=z
   _[3]=y
   _[4]=x
   _[5]=c
   _[6]=a
[2]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=d
   _[5]=c
   _[6]=b
   _[7]=a
[3]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=d
   _[5]=c
   _[6]=b-w
   _[7]=a
[4]:
   _[1]=x+y-z-w
   _[2]=d+w
   _[3]=c+z
   _[4]=b+y
   _[5]=a-y+z+w
   
   
minAssGTZ(IH);   
   
   
[1]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=d-2w
   _[5]=c
   _[6]=b-w
   _[7]=a
[2]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=d-2w
   _[5]=c-w
   _[6]=b
   _[7]=a
[3]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=c
   _[5]=b
   _[6]=a
[4]:
   _[1]=z
   _[2]=y
   _[3]=x
   _[4]=c-w
   _[5]=b-w
   _[6]=a