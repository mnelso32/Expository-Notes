Characteristic 2

intvec V = 1:6, 2:9, 3:5, 4:1; 
ring A=(2,x,y,z,u,v),(e1,e2,e3,e4,e5,e6,e12,e13,e14,e23,e24,e26,e35,e45,e56,e123,e124,e1345,e2345,e2456,e12345),Wp(V);



poly f(1)(2) = e1*e2 + e12;
poly f(1)(3) = e1*e3 + e13;
poly f(1)(4) = e1*e4 + e14;
poly f(1)(5) = e1*e5 + e14 + e45;
poly f(1)(6) = e1*e6 + e12 + e26;
poly f(2)(3) = e2*e3 + e23;
poly f(2)(4) = e2*e4 + e24;
poly f(2)(5) = e2*e5 + e24 + e45;
poly f(2)(6) = e2*e6 + e26;
poly f(3)(4) = e3*e4 + e35 + e45;  
poly f(3)(5) = e3*e5 + e35;  
poly f(3)(6) = e3*e6 + e23 + e26;
poly f(4)(5) = e4*e5 + e45;  
poly f(4)(6) = e4*e6 + e24 + e26;
poly f(5)(6) = e5*e6 + e56;    
poly f(1)(23) = e1*e23 + e123;  
poly f(1)(24) = e1*e24 + e124; 
poly f(1)(35) = e1*e35 + e1345; 
poly f(1)(56) = e1*e56 + e124 + e2456;
poly f(6)(35) = e6*e35 + e2345 + e2456;
poly f(1)(2345) = e1*e2345 + e12345;



list L = (e1,e2,e3,e4,e5,e6,e12,e13,e14,e23,e24,e26,e35,e45,e56,e123,e124,e1345,e2345,e2456,e12345); 
ideal I; int i; for (i=1; i<=21; i++) {I = I + L[i]*L[i];}
I = I + f(1)(2),f(1)(3),f(1)(4),f(1)(5),f(1)(6),f(2)(3),f(2)(4),f(2)(5),f(2)(6),f(3)(4),f(3)(5),f(3)(6),f(4)(5),f(4)(6),f(5)(6),f(1)(23),f(1)(24),
f(1)(35),f(1)(56),f(6)(35),f(1)(2345);
 



poly f(1)(2) = e1*e2 - v*e12;
poly f(1)(3) = e1*e3 - v*e13;
poly f(1)(4) = e1*e4 - v*e14;
poly f(1)(5) = e1*e5 - u*e14 - z*e45;
poly f(1)(6) = e1*e6 - zu*e12 - z*e26;
poly f(2)(3) = e2*e3 - v*e23;
poly f(2)(4) = e2*e4 - v*e24;
poly f(2)(5) = e2*e5 - u*e24 - y*e45;
poly f(2)(6) = e2*e6 - y*e26;
poly f(3)(4) = e3*e4 - v*e35 + v*e45;  
poly f(3)(5) = e3*e5 - u*e35;  
poly f(3)(6) = e3*e6 + zu*e23 - u*e26;
poly f(4)(5) = e4*e5 - x*e45;  
poly f(4)(6) = e4*e6 + zu*e24 - x*e26;
poly f(5)(6) = e5*e6 - u*e56;    
poly f(1)(23) = e1*e23 - v*e123;  
poly f(1)(24) = e1*e24 - v*e124; 
poly f(1)(35) = e1*e35 - v*e1345; 
poly f(1)(56) = e1*e56 + uz*e124 - z*e2456;
poly f(6)(35) = e6*e35 - zu*e2345 + u*e2456;
poly f(1)(2345) = e1*e2345 - v*e12345;



list L = (e1,e2,e3,e4,e5,e6,e12,e13,e14,e23,e24,e26,e35,e45,e56,e123,e124,e1345,e2345,e2456,e12345); 
ideal I; int i; for (i=1; i<=21; i++) {I = I + L[i]*L[i];}
I = I + f(1)(2),f(1)(3),f(1)(4),f(1)(5),f(1)(6),f(2)(3),f(2)(4),f(2)(5),f(2)(6),f(3)(4),f(3)(5),f(3)(6),f(4)(5),f(4)(6),f(5)(6),f(1)(23),f(1)(24),
f(1)(35),f(1)(56),f(6)(35),f(1)(2345);



I = std(I);

option(prot);
int t=timer;
system("--ticks-per-sec", 100);
resolution re=mres(I,1);


for (i=1; i<=21; i++) {for (j=i+1; j<=21; j++) {reduce(L[i]*L[j],I);};};


----------------------------------------------------------------------------------------------------------------


Characteristic 0

LIB "ncalg.lib";

intvec V = 1:6, 2:9, 3:5, 4:1; 
ring A=(0,x,y,z,u,v),(e1,e2,e3,e4,e5,e6,e12,e13,e14,e23,e24,e26,e35,e45,e56,e123,e124,e1345,e2345,e2456,e12345),Wp(V);


matrix C[21][21]; matrix D[21][21]; int i; int j; 
for (i=1; i<=21; i++) {for (j=1; j<=21; j++) {C[i,j]=(-1)^(V[i]*V[j]);}} 
ncalgebra(C,D);
 

  
poly f(1)(2) = e1*e2 - v*e12;
poly f(1)(3) = e1*e3 - v*e13;
poly f(1)(4) = e1*e4 - v*e14;
poly f(1)(5) = e1*e5 - u*e14 - z*e45;
poly f(1)(6) = e1*e6 - zu*e12 - z*e26;
poly f(2)(3) = e2*e3 - v*e23;
poly f(2)(4) = e2*e4 - v*e24;
poly f(2)(5) = e2*e5 - u*e24 - y*e45;
poly f(2)(6) = e2*e6 - y*e26;
poly f(3)(4) = e3*e4 - v*e35 + v*e45;  
poly f(3)(5) = e3*e5 - u*e35;  
poly f(3)(6) = e3*e6 + zu*e23 - u*e26;
poly f(4)(5) = e4*e5 - x*e45;  
poly f(4)(6) = e4*e6 + zu*e24 - x*e26;
poly f(5)(6) = e5*e6 - u*e56;    
poly f(1)(23) = e1*e23 - v*e123;  
poly f(1)(24) = e1*e24 - v*e124; 
poly f(1)(35) = e1*e35 + v*e1345; 
poly f(1)(56) = e1*e56 + uz*e124 - z*e2456;
poly f(6)(35) = e6*e35 + zu*e2345 - u*e2456;
poly f(1)(2345) = e1*e2345 - v*e12345;


list L = (e1,e2,e3,e4,e5,e6,e12,e13,e14,e23,e24,e26,e35,e45,e56,e123,e124,e1345,e2345,e2456,e12345); 
ideal I; int i; for (i=1; i<=21; i++) {I = I + L[i]*L[i];}
I = I + f(1)(2),f(1)(3),f(1)(4),f(1)(5),f(1)(6),f(2)(3),f(2)(4),f(2)(5),f(2)(6),f(3)(4),f(3)(5),f(3)(6),f(4)(5),f(4)(6),f(5)(6),f(1)(23),f(1)(24),f(1)(35),
f(1)(56),f(6)(35),f(1)(2345);

option(redSB);
option(redTail);
I = twostd(I);



,f(1)(23),f(1)(24),
f(1)(35),f(1)(56),f(6)(35),f(1)(2345)


f(6)(35)

I = std(I);

option(prot);
int t=timer;
system("--ticks-per-sec", 100);
resolution re=mres(I,1);


for (i=1; i<=21; i++) {for (j=i+1; j<=21; j++) {reduce(L[i]*L[j],I);};};


----------------------------------------------------------------------------------------------------------------

Multigrading Check

LIB "multigrading.lib";
ring A=2,(x,y,z,u,v,e1,e2,e3,e4,e5,e6,e12,e13,e14,e23,e24,e26,e35,e45,e56,e123,e124,e1345,e2345,e2456,e12345),dp;

intmat M[5][26] =
 
1,0,0,0,0,0,0,0,1,1,0,0,0,1,0,1,0,1,1,1,0,1,1,1,1,1,
0,1,0,0,0,0,1,0,0,0,1,1,0,0,1,1,1,0,0,1,1,1,0,1,1,1,
0,0,1,0,0,1,0,0,0,0,1,1,1,1,0,0,1,0,0,1,1,1,1,0,1,1,
0,0,0,1,0,0,0,1,0,1,1,0,1,0,1,0,1,1,1,1,1,0,1,1,1,1,
0,0,0,0,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,0,1,1,1,1,1,1;

intmat L[5][1] = 0,0,0,0,0;

setBaseMultigrading(M,L);
  
poly f(1)(2) = e1*e2 + v*e12;
poly f(1)(3) = e1*e3 + v*e13;
poly f(1)(4) = e1*e4 + v*e14;
poly f(1)(5) = e1*e5 + u*e14 + z*e45;
poly f(1)(6) = e1*e6 + zu*e12 + z*e26;
poly f(2)(3) = e2*e3 + v*e23;
poly f(2)(4) = e2*e4 + v*e24;
poly f(2)(5) = e2*e5 + u*e24 + y*e45;
poly f(2)(6) = e2*e6 + y*e26;
poly f(3)(4) = e3*e4 + v*e35 + v*e45;  
poly f(3)(5) = e3*e5 + u*e35;  
poly f(3)(6) = e3*e6 + zu*e23 + u*e26;
poly f(4)(5) = e4*e5 + x*e45;  
poly f(4)(6) = e4*e6 + zu*e24 + x*e26;
poly f(5)(6) = e5*e6 + u*e56;    
poly f(1)(23) = e1*e23 + v*e123;  
poly f(1)(24) = e1*e24 + v*e124; 
poly f(1)(35) = e1*e35 + v*e1345; 
poly f(1)(56) = e1*e56 + uz*e124 + z*e2456;
poly f(1)(2345) = e1*e2345 + v*e12345;


isHomogeneous(f(i)(j));

Yes!