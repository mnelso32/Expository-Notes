intvec v = 1:4, 2:6, 3:4, 4:1; 
ring A=2,(e1,e2,e3,e4,e12,e13,e14,e23,e24,e34,e123,e124,e134,e234,e1234,x,y,z,w),(Wp(v),dp);

list T = (e1,e2,e3,e4,e12,e13,e14,e23,e24,e34,e123,e124,e134,e234,e1234); 
int i; int j; ideal I; 

for (i=1; i<=15; i++) {I = I + T[i]*T[i];};

for (i=1; i<=15; i++)
{
    for (j=1; j<=15; j++)
    { 
        if(v[i]+v[j] >= 5)
        {
             I = I + T[i]*T[j];
        }
    }
};

poly f(1)(2) = e1*e2 + xyzw*e12;  
poly f(1)(3) = e1*e3 + xyz2*e14 + x2yz*e34; 
poly f(1)(4) = e1*e4 + xyzw*e14;  
poly f(2)(3) = e2*e3 + xyzw*e23;  
poly f(2)(4) = e2*e4 + xyzw*e24;  
poly f(3)(4) = e3*e4 + xyzw*e34;

poly f(1)(12) = e1*e12;  
poly f(1)(13) = e1*e13 + x2yz*e134; 
poly f(1)(14) = e1*e14;   
poly f(1)(23) = e1*e23 + xyzw*e123 + xy2z*e134;
poly f(1)(24) = e1*e24 + xyzw*e124;  
poly f(1)(34) = e1*e34;
poly f(2)(12) = e2*e12;
poly f(2)(13) = e2*e13 + xyzw*e123 + xy2z*e134;
poly f(2)(14) = e2*e14 + xyzw*e124;
poly f(2)(23) = e2*e23;
poly f(2)(24) = e2*e24;
poly f(2)(34) = e2*e34 + xyzw*e234;
poly f(3)(12) = e3*e12 + xyzw*e123 + xy2z*e134;
poly f(3)(13) = e1*e13 + x2yz*e134;
poly f(3)(14) = e3*e14;
poly f(3)(23) = e3*e23;
poly f(3)(24) = e3*e24 + xyzw*e234;
poly f(3)(34) = e3*e34;
poly f(4)(12) = e4*e12 + xyzw*e124;
poly f(4)(13) = e4*e13;
poly f(4)(14) = e4*e14;
poly f(4)(23) = e4*e23 + xyzw*e234;
poly f(4)(24) = e4*e24;
poly f(4)(34) = e4*e34;






poly S(1)(2)(3) = f(1)(2)*e3 + e1*f(2)(3);  
poly S(1)(3)(2) = f(1)(3)*e2 + e1*f(2)(3);


I = I + f(1)(2), f(1)(3), f(1)(4), f(2)(3), f(2)(4), f(3)(4),
f(1)(12), f(1)(13), f(1)(14), f(1)(23), f(1)(24), f(1)(34),
f(2)(12), f(2)(13), f(2)(14), f(2)(23), f(2)(24), f(2)(34),
f(3)(12), f(3)(13), f(3)(14), f(3)(23), f(3)(24), f(3)(34),
f(4)(12), f(4)(13), f(4)(14), f(4)(23), f(4)(24), f(4)(34);


reduce(S(1)(2)(3),I); 
reduce(S(1)(3)(2),I);




I = std(I);


ring B=2,(e1,e2,e3,e4,e12,e13,e14,e23,e24,e34,e123,e124,e134,e234,e1234,x,y,z,w),(dp(15),dp(4));
ideal J = fetch(A,I);
J = std(J);
J;






reduce(S(1)(2)(3),I); 
reduce(S(1)(2)(4),I); 
reduce(S(1)(3)(4),I);



poly f(2)(13) = e2*e13 + xyz2*e124 + x2yz*e234;

I = twostd(I);
I;

I[1]=e4^2
I[2]=e3*e4+e34
I[3]=e3^2
I[4]=e2*e4+e24
I[5]=e2*e3+e23
I[6]=e2^2
I[7]=e1*e4+e13+e23+e24
I[8]=e1*e3+e14+e34
I[9]=e1*e2+e12
I[10]=e1^2
I[11]=e124
I[12]=e123+e134+e234
I[13]=e4*e34
I[14]=e4*e24
I[15]=e4*e23+e234
I[16]=e4*e14+e134+e234
I[17]=e4*e13+e4*e23
I[18]=e4*e12+e123+e124
I[19]=e3*e34
I[20]=e3*e24+e4*e23
I[21]=e3*e23
I[22]=e3*e14
I[23]=e3*e13+e4*e14+e4*e23
I[24]=e3*e12+e123+e134
I[25]=e2*e34+e4*e23
I[26]=e2*e24
I[27]=e2*e23
I[28]=e2*e14+e3*e12+e4*e23
I[29]=e2*e13+e4*e12
I[30]=e2*e12
I[31]=e1*e34+e4*e14
I[32]=e1*e24+e4*e12
I[33]=e1*e23+e3*e12
I[34]=e1*e14+e4*e14
I[35]=e1*e13+e3*e12+e4*e12
I[36]=e1*e12
I[37]=e34^2
I[38]=e24*e34
I[39]=e24^2
I[40]=e23*e34
I[41]=e23*e24
I[42]=e23^2
I[43]=e14*e34
I[44]=e14*e24
I[45]=e14*e23
I[46]=e14^2
I[47]=e13*e34
I[48]=e13*e24
I[49]=e13*e23
I[50]=e13*e14+e14*e24
I[51]=e13^2+e13*e23
I[52]=e12*e34
I[53]=e12*e24
I[54]=e12*e23
I[55]=e12*e14+e12*e34
I[56]=e12*e13
I[57]=e12^2
I[58]=e4*e234
I[59]=e4*e134
I[60]=e3*e234
I[61]=e3*e134
I[62]=e2*e234
I[63]=e2*e134
I[64]=e1*e234
I[65]=e1*e134
I[66]=e34*e234
I[67]=e34*e134
I[68]=e24*e234
I[69]=e24*e134
I[70]=e23*e234
I[71]=e23*e134
I[72]=e14*e234
I[73]=e14*e134
I[74]=e13*e234
I[75]=e13*e134
I[76]=e12*e234
I[77]=e12*e134
I[78]=e234^2
I[79]=e134*e234
I[80]=e134^2
I[81]=e1234^2

















intvec v = 1:4, 2:6, 3:4, 4:1; 
ring A = 2, (e1,e2,e3,e4,e12,e13,e14,e23,e24,e34,e123,e124,e134,e234,e1234), Wp(v);

poly f(1)(2) = e1*e2 + e12 ;  
poly f(1)(3) = e1*e3 + e14 + e34 ; 
poly f(1)(4) = e1*e4 + e13 + e23 + e24 ;  
poly f(2)(3) = e2*e3 + e23 ;  
poly f(2)(4) = e2*e4 + e24 ;  
poly f(3)(4) = e3*e4 + e34 ;


poly f(1)(12) = e1*e12 ;  
poly f(1)(13) = e1*e13 + e134 ; 
poly f(1)(14) = e1*e14 + e123 + e124 ;   
poly f(1)(23) = e1*e23 + e123 + e134 ;  
poly f(1)(24) = e1*e24 + e123 ;  
poly f(1)(34) = e1*e34 + e134 + e234 ;
poly f(2)(13) = e2*e13 + e123 ;
poly f(2)(14) = e2*e14 + e124 ;
poly f(2)(34) = e2*e34 + e234 ;
poly f(3)(12) = e3*e12 + e123 + e134 ;
poly f(3)(14) = e3*e14 ;
poly f(4)(12) = e4*e12 + e123 ;
poly f(4)(13) = e4*e13 + e234 ;
poly f(4)(14) = e4*e14 + e123 +e124 ;
poly f(4)(23) = e4*e23 + e234;
poly f(4)(34) = e4*e34 ;

poly f(1)(123) = e1*e123 ;
poly f(1)(124) = e1*e124 ;
poly f(2)(234) = e2*e234 ;
poly f(4)(123) = e4*e124 ;
poly f(4)(124) = e4*e124 ;
poly f(4)(134) = e4*e134 + e1234 ;


poly S(1)(2)(3) = f(1)(2)*e3 + e1*f(2)(3) ;  
poly S(1)(2)(4) = f(1)(2)*e4 + e1*f(2)(4) ;  
poly S(1)(3)(4) = f(1)(3)*e4 + e1*f(3)(4) ;
poly S(1)(34)(4) = f(1)(34)*e4 + e1*f(4)(34) ;
poly S(1)(14)(4) = f(1)(14)*e4 + e1*f(4)(14) ;   



list square = (e1,e2,e3,e4,e12,e13,e14,e23,e24,e34,e123,e124,e134,e234,e1234); 
int i; ideal I; for (i=1; i<=15; i++) {I = I + square[i]*square[i];}
I = I + f(1)(2), f(1)(3), f(1)(4), f(2)(3), f(2)(4), f(3)(4),
f(1)(12), f(1)(13), f(1)(14), f(1)(23), f(1)(24), f(1)(34),
f(2)(13), f(2)(14), f(2)(34), f(3)(12), f(3)(14), f(4)(12), f(4)(13), f(4)(14), 
f(4)(23), f(4)(34), f(1)(123), f(1)(124), f(2)(234), f(4)(123), f(4)(124), f(4)(134) ;


reduce(S(1)(2)(3),I); 
reduce(S(1)(2)(4),I); 
reduce(S(1)(3)(4),I);

option(redSB);
option(redTail);
I = std(I);
I;







Let F = (F,d) be a K-complex where K = F2 and where the underlying graded K-vector space of F is finite-dimensional with 
ordered basis e1,...,en.  Furthermore, assume that F is acyclic.  

Define l:F->N as follows: we set l(0) = 0 and if a is a nonzero element in F expressed in the homogeneous basis as a = ei1 + ... + eik,
then we set l(v) = k.  Clearly we have l(v+w) <= l(v) + l(w).     