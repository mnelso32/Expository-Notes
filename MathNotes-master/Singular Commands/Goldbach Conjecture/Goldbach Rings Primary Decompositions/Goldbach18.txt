LIB "primdec.lib";
intvec w=(3,5,6,7,8,10,11,12,13,14,16,17,18);
ring A=0,(x3,x5,x6,x7,x8,x10,x11,x12,x13,x14,x16,x17,x18),(C,wp(w));
ideal I= 

x3*x3-x6,x3*x5-x8,x3*x7-x10,x3*x11-x14,x3*x13-x16,

x5*x5-x10,x5*x7-x12,x5*x11-x16,x5*x13-x18,

x7*x7-x14,x7*x11-x18;

I=std(I);

dim(I); // dim(I)=3
homog(I); // ideal is homogeneous w.r.t. weights
option(prot);
int t=timer;
system("--ticks-per-sec", 100); // give time in 1/100 sec
minAssGTZ(I); // 2 minimal associated primes

[1]:

_[1]=x3^2-x6
_[2]=x3*x5-x8
_[3]=x3*x7-x10
_[4]=x5^2-x10
_[5]=x5*x7-x12
_[6]=x3*x11-x14
_[7]=x7^2-x14
_[8]=x3*x13-x16
_[9]=x5*x11-x16
_[10]=x5*x13-x18
_[11]=x7*x11-x18
_[12]=x11^3-x7*x13^2

[2]:
   _[1]=x3
   _[2]=x5
   _[3]=x6
   _[4]=x7
   _[5]=x8
   _[6]=x10
   _[7]=x12
   _[8]=x14
   _[9]=x16
   _[10]=x18

missing x11,x13,x17


_[1]=x3^2*gen(2)-x6*gen(2)-x3*x5*gen(1)+x8*gen(1)
_[2]=x3^2*gen(3)-x6*gen(3)-x3*x7*gen(1)+x10*gen(1)
_[3]=x3*x5*gen(3)-x8*gen(3)-x3*x7*gen(2)+x10*gen(2)
_[4]=x3^2*gen(4)-x6*gen(4)-x5^2*gen(1)+x10*gen(1)
_[5]=x3*x5*gen(4)-x8*gen(4)-x5^2*gen(2)+x10*gen(2)
_[6]=x3*x7*gen(4)-x10*gen(4)-x5^2*gen(3)+x10*gen(3)
_[7]=x3^2*gen(5)-x6*gen(5)-x5*x7*gen(1)+x12*gen(1)
_[8]=x3*x5*gen(5)-x8*gen(5)-x5*x7*gen(2)+x12*gen(2)
_[9]=x3*x7*gen(5)-x10*gen(5)-x5*x7*gen(3)+x12*gen(3)
_[10]=x5^2*gen(5)-x10*gen(5)-x5*x7*gen(4)+x12*gen(4)
_[11]=x3^2*gen(6)-x6*gen(6)-x3*x11*gen(1)+x14*gen(1)
_[12]=x3*x5*gen(6)-x8*gen(6)-x3*x11*gen(2)+x14*gen(2)
_[13]=x3*x7*gen(6)-x10*gen(6)-x3*x11*gen(3)+x14*gen(3)
_[14]=x5^2*gen(6)-x10*gen(6)-x3*x11*gen(4)+x14*gen(4)
_[15]=x5*x7*gen(6)-x12*gen(6)-x3*x11*gen(5)+x14*gen(5)
_[16]=x3^2*gen(7)-x6*gen(7)-x7^2*gen(1)+x14*gen(1)
_[17]=x3*x5*gen(7)-x8*gen(7)-x7^2*gen(2)+x14*gen(2)
_[18]=x3*x7*gen(7)-x10*gen(7)-x7^2*gen(3)+x14*gen(3)
_[19]=x5^2*gen(7)-x10*gen(7)-x7^2*gen(4)+x14*gen(4)
_[20]=x5*x7*gen(7)-x12*gen(7)-x7^2*gen(5)+x14*gen(5)
_[21]=x3*x11*gen(7)-x14*gen(7)-x7^2*gen(6)+x14*gen(6)
_[22]=x3^2*gen(8)-x6*gen(8)-x3*x13*gen(1)+x16*gen(1)
_[23]=x3*x5*gen(8)-x8*gen(8)-x3*x13*gen(2)+x16*gen(2)
_[24]=x3*x7*gen(8)-x10*gen(8)-x3*x13*gen(3)+x16*gen(3)
_[25]=x5^2*gen(8)-x10*gen(8)-x3*x13*gen(4)+x16*gen(4)
_[26]=x5*x7*gen(8)-x12*gen(8)-x3*x13*gen(5)+x16*gen(5)
_[27]=x3*x11*gen(8)-x14*gen(8)-x3*x13*gen(6)+x16*gen(6)
_[28]=x7^2*gen(8)-x14*gen(8)-x3*x13*gen(7)+x16*gen(7)
_[29]=x3^2*gen(9)-x6*gen(9)-x5*x11*gen(1)+x16*gen(1)
_[30]=x3*x5*gen(9)-x8*gen(9)-x5*x11*gen(2)+x16*gen(2)
_[31]=x3*x7*gen(9)-x10*gen(9)-x5*x11*gen(3)+x16*gen(3)
_[32]=x5*x7*gen(9)-x12*gen(9)-x5*x11*gen(5)+x16*gen(5)
_[33]=x3*x11*gen(9)-x14*gen(9)-x5*x11*gen(6)+x16*gen(6)
_[34]=x7^2*gen(9)-x14*gen(9)-x5*x11*gen(7)+x16*gen(7)
_[35]=x3*x13*gen(9)-x16*gen(9)-x5*x11*gen(8)+x16*gen(8)
_[36]=x3^2*gen(10)-x6*gen(10)-x5*x13*gen(1)+x18*gen(1)
_[37]=x3*x5*gen(10)-x8*gen(10)-x5*x13*gen(2)+x18*gen(2)
_[38]=x3*x7*gen(10)-x10*gen(10)-x5*x13*gen(3)+x18*gen(3)
_[39]=x5^2*gen(10)-x10*gen(10)-x5*x13*gen(4)+x18*gen(4)
_[40]=x5*x7*gen(10)-x12*gen(10)-x5*x13*gen(5)+x18*gen(5)
_[41]=x3*x11*gen(10)-x14*gen(10)-x5*x13*gen(6)+x18*gen(6)
_[42]=x7^2*gen(10)-x14*gen(10)-x5*x13*gen(7)+x18*gen(7)
_[43]=x3*x13*gen(10)-x16*gen(10)-x5*x13*gen(8)+x18*gen(8)
_[44]=x5*x11*gen(10)-x16*gen(10)-x5*x13*gen(9)+x18*gen(9)
_[45]=x3*gen(11)-x3*gen(10)-x5*gen(9)+x5*gen(8)+x11*gen(4)-x11*gen(3)
_[46]=x5*gen(11)-x5*gen(10)-x7*gen(9)+x7*gen(8)+x13*gen(4)-x13*gen(3)
_[47]=x6*gen(11)-x6*gen(10)-x8*gen(9)+x8*gen(8)+x3*x11*gen(4)-x3*x11*gen(3)-x5*x11*gen(2)+x3*x13*gen(2)+x7*x11*gen(1)-x5*x13*gen(1)
_[48]=x8*gen(11)-x8*gen(10)-x10*gen(9)+x10*gen(8)+x3*x13*gen(4)-x5*x11*gen(3)+x7*x11*gen(2)-x5*x13*gen(2)
_[49]=x10*gen(11)-x10*gen(10)-x12*gen(9)+x12*gen(8)-x5*x11*gen(5)+x3*x13*gen(5)+x7*x11*gen(4)-x5*x13*gen(3)
_[50]=x12*gen(11)-x12*gen(10)-x14*gen(9)+x14*gen(8)-x5*x11*gen(7)+x3*x13*gen(7)+x7*x11*gen(5)-x5*x13*gen(5)+x7*x13*gen(4)-x7*x13*gen(3)
_[51]=x14*gen(11)-x14*gen(10)-x5*x11*gen(9)+x5*x11*gen(8)+x7*x11*gen(6)-x5*x13*gen(6)+x11^2*gen(4)-x11^2*gen(3)
_[52]=x7^2*gen(11)-x14*gen(10)-x5*x11*gen(9)+x5*x11*gen(8)-x7*x11*gen(7)+x18*gen(7)+x7*x11*gen(6)-x5*x13*gen(6)+x11^2*gen(4)-x11^2*gen(3)
_[53]=x16*gen(11)-x16*gen(10)-x5*x13*gen(9)+x7*x11*gen(8)+x11*x13*gen(4)-x11*x13*gen(3)
_[54]=x18*gen(11)+x7*x11*gen(10)-x5*x13*gen(10)-x18*gen(10)-x7*x13*gen(9)+x7*x13*gen(8)+x13^2*gen(4)-x13^2*gen(3)
_[55]=x3*gen(12)-x7*x11*gen(11)+x7*x11*gen(10)-x7*x13*gen(9)+x7*x13*gen(8)+x11^2*gen(7)-x11^2*gen(6)
_[56]=x5*gen(12)-x7*x13*gen(11)+x7*x13*gen(10)-x11^2*gen(9)+x11^2*gen(8)+x11*x13*gen(7)-x11*x13*gen(6)
_[57]=x6*gen(12)-x11*x12*gen(9)-x7*x16*gen(9)+x10*x13*gen(8)+x7*x16*gen(8)+x11*x14*gen(7)+x7^2*x11*gen(6)-x3*x11^2*gen(6)-x11*x14*gen(6)-x5*x11^2*gen(5)+x11*x16*gen(5)+x7*x11^2*gen(4)-x7*x11^2*gen(3)+x3*x13^2*gen(3)-x13*x16*gen(3)+x11^3*gen(1)-x7*x13^2*gen(1)
_[58]=x7*gen(12)-x11^2*gen(11)+x11^2*gen(10)-x11*x13*gen(9)+x11*x13*gen(8)+x13^2*gen(7)-x13^2*gen(6)
_[59]=x8*gen(12)-x12*x13*gen(9)-x11*x14*gen(9)+x12*x13*gen(8)+x11*x14*gen(8)+x13*x14*gen(7)-x5*x11^2*gen(6)+x7^2*x13*gen(6)-x13*x14*gen(6)-x5*x11*x13*gen(5)+x3*x13^2*gen(5)+x7*x11*x13*gen(4)-x7*x11*x13*gen(3)+x11^3*gen(2)-x7*x13^2*gen(2)
_[60]=x10*gen(12)-x5*x11^2*gen(9)-x13*x14*gen(9)+x5*x11^2*gen(8)+x13*x14*gen(8)+x3*x13^2*gen(7)-x5*x11*x13*gen(6)+x11^3*gen(4)-x7*x13^2*gen(3)
_[61]=x12*gen(12)-x7*x11^2*gen(9)-x5*x11*x13*gen(9)+x7*x11^2*gen(8)+x5*x11*x13*gen(8)+x5*x13^2*gen(7)-x5*x13^2*gen(6)+x11^3*gen(5)-x7*x13^2*gen(5)+x11^2*x13*gen(4)-x11^2*x13*gen(3)
_[62]=x14*gen(12)-x7*x11^2*gen(11)+x7*x11^2*gen(10)-x7*x11*x13*gen(9)+x7*x11*x13*gen(8)+x11^3*gen(7)-x7*x13^2*gen(6)
_[63]=x16*gen(12)-x7*x11*x13*gen(11)+x7*x11*x13*gen(10)-x7*x13^2*gen(9)+x11^3*gen(8)+x11^2*x13*gen(7)-x11^2*x13*gen(6)
_[64]=x18*gen(12)-x7*x13^2*gen(11)+x11^3*gen(10)-x11^2*x13*gen(9)+x11^2*x13*gen(8)+x11*x13^2*gen(7)-x11*x13^2*gen(6)















ideal P = minAssGTZ(I)[1];
P=std(P);
P;

P[1]=x3^2-x6
P[2]=x3*x5-x8
P[3]=x3*x7-x10
P[4]=x5^2-x10
P[5]=x5*x6-x3*x8
P[6]=x5*x7-x12
P[7]=x5*x8-x3*x10
P[8]=x6*x7-x3*x10
P[9]=x3*x11-x14
P[10]=x7^2-x14
P[11]=x5*x10-x3*x12
P[12]=x7*x8-x3*x12
P[13]=x3*x13-x16
P[14]=x5*x11-x16
P[15]=x8^2-x6*x10
P[16]=x5*x12-x3*x14
P[17]=x6*x11-x3*x14
P[18]=x7*x10-x3*x14
P[19]=x5*x13-x18
P[20]=x7*x11-x18
P[21]=x8*x10-x6*x12
P[22]=x5*x14-x3*x16
P[23]=x6*x13-x3*x16
P[24]=x7*x12-x3*x16
P[25]=x8*x11-x3*x16
P[26]=x8*x12-x6*x14
P[27]=x10^2-x6*x14
P[28]=x5*x16-x3*x18
P[29]=x7*x14-x3*x18
P[30]=x8*x13-x3*x18
P[31]=x10*x11-x3*x18
P[32]=x8*x14-x6*x16
P[33]=x10*x12-x6*x16
P[34]=x7*x16-x5*x18
P[35]=x10*x13-x5*x18
P[36]=x11*x12-x5*x18
P[37]=x8*x16-x6*x18
P[38]=x10*x14-x6*x18
P[39]=x12^2-x6*x18
P[40]=x11*x14-x7*x18
P[41]=x12*x13-x7*x18
P[42]=x10*x16-x8*x18
P[43]=x12*x14-x8*x18
P[44]=x13*x14-x11*x16
P[45]=x12*x16-x10*x18
P[46]=x14^2-x10*x18
P[47]=x13*x16-x11*x18
P[48]=x14*x16-x12*x18
P[49]=x16^2-x14*x18
P[50]=x11^3-x7*x13^2
P[51]=x11^2*x16-x7*x13*x18

dim(P); //dim(P)=3

ideal Q = minAssGTZ(I)[2];
Q=std(Q);
Q; 

Q[1]=x3
Q[2]=x5
Q[3]=x6
Q[4]=x7
Q[5]=x8
Q[6]=x10
Q[7]=x12
Q[8]=x14
Q[9]=x16
Q[10]=x18

// missing x11,x13,x17

dim(Q); //dim(Q)=3

primdecGTZ(I); // two associated primes (precisely the minimal primes). 